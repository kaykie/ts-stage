{"version":3,"sources":["components/ImageUploader/index.tsx","pages/Settings/info/index.tsx"],"names":["ImageUploader","props","_this","Object","E_work_2_0_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","E_work_2_0_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","E_work_2_0_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","input","createRef","upload","node","current","click","uploading","e","target","files","file","type","test","size","reader","FileReader","readAsDataURL","E_work_2_0_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","onload","event","state","loading","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","className","imageUrl","src","alt","onClick","antd_es_icon__WEBPACK_IMPORTED_MODULE_1__","ref","style","display","onChange","React","Component","FormType","Option","TextArea","EnterpriseInfo","changeFormType","changeRadio","val","form","getFieldsValue","formItemLayout","labelCol","span","wrapperCol","getFieldDecorator","react__WEBPACK_IMPORTED_MODULE_11___default","antd_es_form__WEBPACK_IMPORTED_MODULE_1__","Item","assign","label","rules","required","whitespace","message","antd_es_input__WEBPACK_IMPORTED_MODULE_8__","placeholder","maxLength","_components_ImageUploader_index__WEBPACK_IMPORTED_MODULE_13__","initialValue","antd_es_select__WEBPACK_IMPORTED_MODULE_10__","value","rows","WapperdEnterpriseInfo","create"],"mappings":"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","file":"static/js/10.2e17ab1d.chunk.js","sourcesContent":["import React, { createRef, ChangeEvent } from \"react\";\r\nimport \"./index.less\";\r\nimport { Upload, Icon } from \"antd\";\r\nimport config from \"../../api/config\";\r\n\r\ninterface ImageUploadComponentProps {\r\n  imageUrl?: string,\r\n}\r\ninterface ImageUploadComponentState {\r\n  loading: boolean\r\n}\r\ninterface HTMLInputEvent extends Event {\r\n  target: HTMLInputElement & EventTarget;\r\n}\r\nexport default class ImageUploader extends React.Component<ImageUploadComponentProps, ImageUploadComponentState> {\r\n  private input = createRef<HTMLInputElement>()\r\n  constructor(props: ImageUploadComponentProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n    }\r\n    // this.input = React.createRef();\r\n  }\r\n  public beforeUpload(): boolean {\r\n    return true;\r\n  }\r\n  public handleChange() {\r\n    //\r\n  }\r\n  public upload = () => {\r\n    const node = this.input.current;\r\n    if (node) {\r\n      node.click();\r\n    }\r\n  }\r\n  public uploading = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (!e.target.files) {\r\n      return\r\n    }\r\n    const file = e.target.files[0];\r\n    const type = file.type;\r\n    if (!/^image\\/(png|jpg|jpeg)/.test(type)) {\r\n      // 照片支持.jpg .jpeg .bmp .png .gif格式\r\n      // this.imageError = \"图片格式为jpg/png\";\r\n      // this.$toast({\r\n      //   type: \"error\",\r\n      //   message: \"图片格式为jpg/png\"\r\n      // });\r\n      return;\r\n    }\r\n    if (file.size > 1024 * 1024 * 8) {\r\n      // 大小不超过8M\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    const that = this;\r\n    reader.onload = (event: ProgressEvent): any => {\r\n      // that.imageSource = event.target.result;\r\n      // const blob = that._parseBase64(reader.result);\r\n      // that.base64image = blob;\r\n      // that.uploadFile(file).then(res => {\r\n      //   that.imageUrl = res.data.imgUrl;\r\n      // })\r\n    }\r\n  }\r\n  public render() {\r\n    return (\r\n      <div className=\"mf-uploader\">\r\n        { this.props.imageUrl ? (<div className=\"mf-uploader__image\">\r\n          <img src={this.props.imageUrl} alt=\"\" onClick={this.upload}/>\r\n          <a className=\"mf-uploader__image__reupload\" onClick={this.upload}>重新上传</a>\r\n        </div>) : (\r\n        <div className=\"mf-uploader__upload\" onClick={this.upload}>\r\n          <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n        </div>)}\r\n        <input type=\"file\" ref={this.input} style={{ display: \"none\" } } onChange={this.uploading} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./index.less\";\r\nimport { Button, Form, Input, Radio, Upload, Icon, Select } from \"antd\";\r\nimport { FormComponentProps } from \"antd/lib/form/Form\";\r\nimport { testProvider } from \"../../../api/provider/index\";\r\nimport ImageUploader from \"../../../components/ImageUploader/index\";\r\nimport CityPicker from \"../../../components/CityPicker/index\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nenum FormType {\r\n  ENTERPRISE = \"enterprise\", // 企业类型\r\n  GOVERNMENT = \"government\", // 政府\r\n  INDIVIDUAL = \"individual\", // 个体工商户\r\n  OTHER = \"other\", // 其他\r\n}\r\ninterface IFormComponentProps extends FormComponentProps {\r\n  businessEntity: string\t// 企业名称\tY\r\n  businessLicense: string\t// 营业执照号\tY\r\n  legalBody: string\t// 联系人姓名\tY\r\n  addr: string\t// 企业地址\tY\r\n  businessLicensePic:\tstring\t// 营业执照照片\tY\r\n  phone: string //\t联系人手机电话\tY\r\n  cardType: number\t// 证件类型(1:统一社会信用代码证书;2:组织机构代码证;3:事业单位法人证书)\tY\r\n  staffNum: number\t// 人员规模(1:50人以下、2:51到100人、3:101到200人、4:201到500人、5:501到1000人、6:1001到2000人、7:2001到5000人、8:5001到1万人、9:1万人以上)\tY\r\n  officialWebsite: string\t// 公司官网\tY\r\n  companyBrief: string\t// 公司简介\tY\r\n  cityName: string\t// 所在城市(省市区,|分割)\tY\r\n  logoUrl: string // logoUrl地址\r\n  industry: string // 行业\r\n  companyType: number\t// 企业类型(1:企业认证;2:政府/事业单位3:个体工商户;4:其他组织)\tY\r\n  // longitude\tdecimal(8,4)\t经度\tY\r\n  // latitude\tdecimal(8,4)\t纬度\r\n}\r\nclass EnterpriseInfo extends React.Component<IFormComponentProps> {\r\n  constructor(props: IFormComponentProps) {\r\n    super(props);\r\n    // this.props.form.cardType = 1;\r\n  }\r\n  public test = () => {\r\n    // testProvider.isAllowMultilogin().then(res => {\r\n    //   console.log(res);\r\n    // })\r\n  }\r\n  public changeFormType = (type: FormType) => {\r\n    // this.setState({\r\n    //   select: type,\r\n    // });\r\n  }\r\n  public changeRadio = (val: any) => {\r\n    const v = this.props.form.getFieldsValue();\r\n  }\r\n  public render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },\r\n      wrapperCol: { span: 20 },\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className=\"mf-info\">\r\n        <div className=\"mf-info-title\">\r\n          编辑企业信息\r\n        </div>\r\n        <div className=\"mf-info-content\">\r\n          <Form {...formItemLayout}>\r\n            <Form.Item label=\"企业名称\" {...formItemLayout}>\r\n              {getFieldDecorator('businessEntity', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: false,\r\n                    message: '请输入企业名称',\r\n                  },\r\n                ],\r\n              })(<div><Input placeholder=\"\" maxLength={32} />\r\n                <div className=\"mf-info-content__prompt\">\r\n                  <span>企业名称长度最多为32个汉字或字母，如已认证则不可修改</span>\r\n                </div>\r\n              </div>)}\r\n            </Form.Item>\r\n            <Form.Item label=\"企业logo\">\r\n              {getFieldDecorator('logoUrl', {})(<ImageUploader imageUrl={\"\"} />)}\r\n            </Form.Item>\r\n            <Form.Item label=\"企业类型\" {...formItemLayout}>\r\n              {getFieldDecorator('companyType', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: false,\r\n                    message: '请选择企业类型',\r\n                  },\r\n                ],\r\n                initialValue: \"1\"\r\n              })(\r\n              <Select >\r\n                <Option value=\"1\">企业</Option>\r\n                <Option value=\"2\">个体工商户</Option>\r\n                <Option value=\"3\">政府/事业单位</Option>\r\n                <Option value=\"4\">其他组织</Option>\r\n              </Select>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"所在行业\" {...formItemLayout}>\r\n              {getFieldDecorator('industry', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: false,\r\n                    message: '请选择所在行业',\r\n                  },\r\n                ],\r\n                initialValue: \"1\"\r\n              })(\r\n              <Select >\r\n                <Option value=\"1\">安防行业</Option>\r\n              </Select>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"办公地址\" {...formItemLayout}>\r\n              {getFieldDecorator('addr', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: false,\r\n                    message: '请输入办公地址',\r\n                  },\r\n                ],\r\n              })(<div><Input placeholder=\"\" maxLength={32} />\r\n                <div className=\"mf-info-content__prompt\">\r\n                  <span>办公地址输入规则及相关提示</span>\r\n                </div>\r\n              </div>)}\r\n            </Form.Item>\r\n            <Form.Item label=\"人员规模\" {...formItemLayout}>\r\n              {getFieldDecorator('staffNum', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: false,\r\n                    message: '请选择人员规模',\r\n                  },\r\n                ],\r\n                initialValue: \"1\"\r\n              })(\r\n              <Select >\r\n                <Option value=\"1\">50人以下</Option>\r\n                <Option value=\"2\">51-100人</Option>\r\n                <Option value=\"3\">101-200人</Option>\r\n                <Option value=\"4\">201-500人</Option>\r\n                <Option value=\"5\">501-1000人</Option>\r\n                <Option value=\"6\">1001-2000人</Option>\r\n                <Option value=\"7\">2001-5000人</Option>\r\n                <Option value=\"8\">5001-10000人</Option>\r\n                <Option value=\"9\">1万人以上</Option>\r\n              </Select>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"企业官网\" {...formItemLayout}>\r\n              {getFieldDecorator('officialWebsite', {\r\n              })(<div><Input placeholder=\"\" maxLength={32} />\r\n                <div className=\"mf-info-content__prompt\">\r\n                  <span>网址输入规则及相关提示</span>\r\n                </div>\r\n              </div>)}\r\n            </Form.Item>\r\n            <Form.Item label=\"联系电话\" {...formItemLayout}>\r\n              {getFieldDecorator('phone', {\r\n              })(<div><Input placeholder=\"\" maxLength={11} />\r\n                <div className=\"mf-info-content__prompt\">\r\n                  <span>联系电话输入规则及相关提示</span>\r\n                </div>\r\n              </div>)}\r\n            </Form.Item>\r\n            <Form.Item label=\"企业简介\" {...formItemLayout}>\r\n              {getFieldDecorator('companyBrief', {\r\n              })(<div><TextArea rows={4} />\r\n                <div className=\"mf-info-content__prompt\">\r\n                  <span>简介输入规则及相关提示</span>\r\n                </div>\r\n              </div>)}\r\n            </Form.Item>\r\n          </Form>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WapperdEnterpriseInfo = Form.create<IFormComponentProps>()(EnterpriseInfo);\r\nexport default WapperdEnterpriseInfo;\r\n"],"sourceRoot":""}