{"version":3,"sources":["components/MfOrgdrawer/index.tsx","components/MfTree/index.tsx","pages/Organize/component/ChildDepartment/departmentChildWrap.tsx","pages/Organize/component/ChildDepartment/departmentChildItem.tsx","pages/Organize/component/ChildDepartment/index.tsx","pages/Organize/component/DepartmentHeader/index.tsx","pages/Organize/component/DepartmentMember/columns.tsx","pages/Organize/component/DepartmentMember/rowSelection.tsx","pages/Organize/component/DepartmentMember/index.tsx","pages/Organize/component/EditDepartment/index.tsx","pages/Organize/index.tsx"],"names":["MfOrgdrawer","props","react_default","a","createElement","className","clasnames","show","visible","onClick","onCollapse","children","onExpand","TreeNode","DirectoryTree","MfTree","inject","observer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderTreeNodes","data","map","item","title","key","dataRef","icon","assign","onLoadData","treeNode","Promise","resolve","setTimeout","console","log","eventKey","concat","setState","treeData","toConsumableArray","state","onSelect","getOrgTree","organizeStore","style","minHeight","loadData","expandAction","defaultSelectedKeys","defaultExpandedKeys","React","Component","DepartmentChildWrap","DragDropContext","HTMLBackend","departmentChildItemSource","beginDrag","name","DepartmentChildItem","DropTarget","drop","monitor","dragName","getItem","hoverName","dragEndCallback","connect","connectDropTarget","dropTarget","isOver","canDrop","DragSource","connectDragSource","dragSource","isDragging","_this$props","num","ChildDepartment","source","target","sortChildDepartmentList","addChildDepartment","history","match","push","location","pathname","_this2","childDepartmentList","departmentChildWrap","val","index","departmentChildItem_DepartmentChildItem","id","withRouter","DepartmentHeader","editOrganize","replace","paramsId","urlMatch","href","input","type","suffix","placeholder","columns","dataIndex","rowSelection","onChange","selectedRowKeys","selectedRows","record","selected","onSelectAll","changeRows","DepartmentMember","departmentMemberList","table","dataSource","slice","rowKey","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offet","offset","EditDepartment","onCloseDrawer","url","go","showOrgTree","orgTreeVisible","cancelTreeVisibleCb","drawer","onClose","width","es_form","labelAlign","Item","label","size","es_button","modal","onCancel","footer","bodyStyle","padding","src_components_MfTree","Organize","mforgdrawerCollapse","orgdrawerVisible","mforgdrawerExpand","organizeList","path","src_components_MfOrgdrawer","Organize_component_DepartmentHeader","Organize_component_ChildDepartment","Organize_component_DepartmentMember","react_router","component","EditOrganizePage"],"mappings":"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","file":"static/js/8.551ee1e2.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\nimport clasnames from \"classnames\";\r\nimport \"./index.less\";\r\n\r\ninterface MfOrgdrawerProps {\r\n  visible?: boolean,\r\n  onCollapse?: (event: any) => void,\r\n  onExpand?: (event: any) => void,\r\n  children?: any,\r\n}\r\nconst MfOrgdrawer: React.FC<MfOrgdrawerProps> = (props: MfOrgdrawerProps) => {\r\n  return (\r\n    <div className={clasnames(\"mf-orgdrawer\", { \"show\": props.visible })}>\r\n      <div className=\"mf-orgdrawer__content\">\r\n        <a className=\"mf-orgdrawer__collapse\" onClick={props.onCollapse}>\r\n          <i className=\"iconfont iconxiangzuo\" />\r\n          收起\r\n        </a>\r\n        <h3 className=\"mf-orgdrawer__title\">企业架构</h3>\r\n      </div>\r\n      {props.children}\r\n      <a\r\n        className={\r\n          clasnames(\"mf-orgdrawer__expand\", { \"show\": !props.visible })\r\n        }\r\n        onClick={props.onExpand}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MfOrgdrawer;\r\n\r\n","import React, { ReactComponentElement } from \"react\";\r\nimport { Tree } from \"antd\";\r\nimport { AntTreeNode } from \"antd/lib/tree\";\r\nimport { observer, inject } from 'mobx-react';\r\nimport OrganizeStore from '../../store/organize';\r\nimport \"./index.less\";\r\nimport Organize from '../../pages/Organize/index';\r\n\r\nconst { TreeNode, DirectoryTree } = Tree;\r\n\r\ninterface MfTreeProps {\r\n  organizeStore?: OrganizeStore,\r\n  minHeight?: number,\r\n}\r\ninterface MfTreeStates {\r\n  treeData: MfTreeNodeData[]\r\n}\r\ninterface MfTreeNodeData {\r\n  children?: MfTreeNodeData[],\r\n  title: string,\r\n  key: string,\r\n}\r\n@inject(\"organizeStore\")\r\n@observer\r\nclass MfTree extends React.Component<MfTreeProps, MfTreeStates> {\r\n  constructor(props: MfTreeProps) {\r\n    super(props);\r\n    this.state = {\r\n      treeData: [\r\n        { title: '这里是测试这里是测试这里是测试这里是测试这里是测试这里是测试这里是测试', key: \"0\" },\r\n      ]\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    const { getOrgTree } = this.props.organizeStore as OrganizeStore;\r\n    getOrgTree({});\r\n  }\r\n  renderTreeNodes = (data: MfTreeNodeData[]): JSX.Element[] => {\r\n    return data.map((item: MfTreeNodeData) => {\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode\r\n            title={item.title}\r\n            key={item.key}\r\n            dataRef={item}\r\n            icon={null}\r\n          >\r\n            {this.renderTreeNodes(item.children)}\r\n          </TreeNode>\r\n        )\r\n      }\r\n      return <TreeNode {...item} dataRef={item} key={item.key} />\r\n    })\r\n  }\r\n  onLoadData = (treeNode: AntTreeNode): Promise<any> => {\r\n    return new Promise(resolve => {\r\n      if (treeNode.props.children) {\r\n        resolve();\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        console.log(treeNode.props.eventKey);\r\n        treeNode.props.dataRef.children = [\r\n          { title: '测试', key: `${treeNode.props.eventKey}-0` },\r\n          { title: '测试', key: `${treeNode.props.eventKey}-1` },\r\n        ];\r\n        this.setState({\r\n          treeData: [...this.state.treeData]\r\n        })\r\n        resolve();\r\n      }, 1000);\r\n    })\r\n  }\r\n  onSelect = () => {\r\n    console.log('onselect');\r\n  }\r\n  onExpand = () => {\r\n    console.log('onExpand');\r\n  }\r\n  render() {\r\n    const { treeData } = this.state;\r\n    return (\r\n      <div className=\"mf-tree\" style={{ \"minHeight\": this.props.minHeight ? `${this.props.minHeight}px` : 'inherit' }}>\r\n        <DirectoryTree\r\n          loadData={this.onLoadData}\r\n          onSelect={this.onSelect}\r\n          onExpand={this.onExpand}\r\n          expandAction={false}\r\n          defaultSelectedKeys={[\"0\"]}\r\n          defaultExpandedKeys={[\"0\"]}\r\n        >\r\n          {this.renderTreeNodes(this.state.treeData)}\r\n        </DirectoryTree >\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MfTree;\r\n","import React from 'react';\r\nimport { DragDropContext } from 'react-dnd';\r\nimport HTMLBackend from 'react-dnd-html5-backend';\r\n\r\n@DragDropContext(HTMLBackend)\r\nclass DepartmentChildWrap extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n      <div className=\"mf-child-department__content\">{this.props.children}</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DepartmentChildWrap;\r\n","import React from 'react';\r\nimport {\r\n  DragSource,\r\n  DropTarget,\r\n} from 'react-dnd';\r\n\r\nconst departmentChildWrapTarget = {\r\n  drop(props: any, monitor: any) {\r\n    const dragName = monitor.getItem().name; // 拖拽目标的Index\r\n    const hoverName = props.name;\r\n    if (dragName === hoverName) {\r\n      return;\r\n    }\r\n    props.dragEndCallback(dragName, hoverName);\r\n  }\r\n};\r\n\r\nconst departmentChildWrapTargetCollectort = (connect: any, monitor: any) => ({\r\n  // 包裹住 DOM 节点，使其可以接收对应的拖拽组件\r\n  connectDropTarget: connect.dropTarget(),\r\n  // drag source是否在 drop target 区域\r\n  isOver: monitor.isOver(),\r\n  // 是否可以被放置\r\n  canDrop: monitor.canDrop()\r\n});\r\nconst departmentChildItemSource = {\r\n  beginDrag(props: any) {\r\n    console.log('开始拖拽')\r\n    return {\r\n      name: props.name,\r\n    }\r\n  }\r\n};\r\nconst departmentChildItemSourceCollectort = (connect: any, monitor: any) => ({\r\n  // 包裹住 DOM 节点，使其可以进行拖拽操作\r\n  connectDragSource: connect.dragSource(),\r\n  // 是否处于拖拽状态\r\n  isDragging: monitor.isDragging(),\r\n});\r\n@DropTarget(\r\n  'departmentChildItem',\r\n  departmentChildWrapTarget,\r\n  departmentChildWrapTargetCollectort\r\n)\r\n@DragSource(\r\n  'departmentChildItem',\r\n  departmentChildItemSource,\r\n  departmentChildItemSourceCollectort\r\n)\r\nexport default class DepartmentChildItem extends React.Component<any, any> {\r\n  render() {\r\n    const { isDragging, connectDragSource, connectDropTarget } = this.props;\r\n    const { name } = this.props;\r\n    const opacity = isDragging ? 0.4 : 1;\r\n    return (\r\n      connectDragSource(\r\n        connectDropTarget(\r\n          <div className=\"mf-child-department__content__item\">\r\n            <span>{this.props.name}</span>\r\n            <span>({this.props.num})</span>\r\n          </div>\r\n        )\r\n      )\r\n    )\r\n  }\r\n}\r\n","import React, { FormEvent } from 'react';\r\nimport { Form, Input } from \"antd\";\r\nimport { observer, inject } from 'mobx-react';\r\nimport OrganizeStore from './../../../../store/organize';\r\nimport { DragDropContext } from 'react-dnd';\r\nimport HTMLBackend from 'react-dnd-html5-backend';\r\nimport DepartmentChildWrap from './departmentChildWrap';\r\nimport DepartmentChildItem from './departmentChildItem';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport \"./index.less\"\r\n\r\ninterface ChildDepartmentProps extends RouteComponentProps {\r\n  organizeStore?: OrganizeStore\r\n}\r\ninterface MatchParams {\r\n  id?: string,\r\n}\r\n\r\n@inject(\"organizeStore\")\r\n@observer\r\nclass ChildDepartment extends React.Component<ChildDepartmentProps, {}> {\r\n  constructor(props: ChildDepartmentProps) {\r\n    super(props);\r\n  }\r\n  componentWillMount() {\r\n    // 获取\r\n  }\r\n  dragEndCallback = (source: any, target: any) => {\r\n    const { sortChildDepartmentList } = this.props.organizeStore as OrganizeStore;\r\n    sortChildDepartmentList(source, target);\r\n  }\r\n  addChildDepartment = () => {\r\n    const { history, match } = this.props;\r\n    history.push(`${history.location.pathname}/add`);\r\n  }\r\n  render() {\r\n    const { childDepartmentList } = this.props.organizeStore as OrganizeStore;\r\n    return (\r\n      <div className=\"mf-child-department\">\r\n        <div className=\"mf-child-department__title\">\r\n          <a className=\"mf-child-department__title__name\">\r\n            下级部门<span>20</span>\r\n          </a>\r\n          <a className=\"mf-child-department__add\" onClick={this.addChildDepartment}>\r\n            <i className=\"iconfont iconjia\" />\r\n            <span>添加子部门</span>\r\n          </a>\r\n          <a className=\"mf-child-department__sort\">\r\n            <i className=\"iconfont iconpaixu\" />\r\n            <span>部门排序</span>\r\n          </a>\r\n        </div>\r\n        <DepartmentChildWrap>\r\n          {\r\n            childDepartmentList.map((val, index) => {\r\n              return (\r\n                <DepartmentChildItem\r\n                  key={val.id}\r\n                  name={val.name}\r\n                  num={val.num}\r\n                  dragEndCallback={this.dragEndCallback}\r\n                />\r\n              )\r\n            })\r\n          }\r\n        </DepartmentChildWrap>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ChildDepartment);\r\n","import React, { FormEvent } from 'react';\r\nimport { Form, Input, Icon } from \"antd\";\r\nimport { observer, inject } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport OrganizeStore from './../../../../store/organize';\r\nimport \"./index.less\"\r\n\r\ninterface DepartmentHeaderProps extends RouteComponentProps {\r\n  organizeStore?: OrganizeStore\r\n}\r\ninterface DepartmentHeaderState {\r\n  paramsId?: string,\r\n}\r\ninterface MatchParams {\r\n  id?: string,\r\n}\r\n\r\n@inject(\"organizeStore\")\r\n@observer\r\nclass DepartmentHeader extends React.Component<DepartmentHeaderProps, DepartmentHeaderState> {\r\n  constructor(props: DepartmentHeaderProps) {\r\n    super(props);\r\n    this.state = {\r\n      paramsId: '',\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    const { history, match } = this.props;\r\n    const urlMatch = history.location.pathname.match(/organize\\/(.*)/);\r\n    console.log(history.location.pathname, urlMatch);\r\n    let id = \"\";\r\n    if (urlMatch) {\r\n      id = urlMatch[1];\r\n    }\r\n    console.log(id);\r\n    if (id && id !== \"add\") {\r\n      this.setState({\r\n        paramsId: id,\r\n      })\r\n    }\r\n  }\r\n  editOrganize = (id: string) => {\r\n    const { history } = this.props;\r\n    history.replace(`/organize/${id}/edit`);\r\n  }\r\n  render() {\r\n    const { paramsId } = this.state;\r\n    return (\r\n      <div className=\"mf-department-header\">\r\n        <h3 className=\"mf-department-header__title\">\r\n          杭州海康威视数字技术股份有限公司\r\n          {\r\n            paramsId ?\r\n              <a\r\n                href=\"javascript: void(0)\"\r\n                onClick={() => { this.editOrganize(paramsId) }}\r\n                className=\"mf-department-header__edit\"\r\n              >\r\n                <i className=\"iconfont iconbianji\" />\r\n              </a> :\r\n              <span className=\"mf-department-header__title__review\">\r\n                <i className=\"iconfont iconrenyuanshenhe\" />\r\n                人员审核\r\n            </span>\r\n          }\r\n        </h3>\r\n        <div className=\"mf-department-header__search\">\r\n          <div className=\"mf-department-header__search__xx\">东海龙宫集团</div>\r\n          <div className=\"mf-department-header__search__wrap\">\r\n            <Input\r\n              type=\"text\"\r\n              suffix={<Icon type=\"search\" />}\r\n              placeholder=\"输入姓名、电话号码、部门名称进行搜索\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(DepartmentHeader);\r\n","export default [\r\n  {\r\n    title: '姓名',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: '电话',\r\n    dataIndex: 'phone',\r\n    key: 'phone',\r\n  },\r\n  {\r\n    title: '职位',\r\n    dataIndex: 'post',\r\n    key: 'post',\r\n  }\r\n]\r\n","export default {\r\n  onChange: (selectedRowKeys: string[] | number[], selectedRows: any) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  onSelect: (record: any, selected: boolean, selectedRows: Object[]) => {\r\n    console.log(record, selected, selectedRows);\r\n  },\r\n  onSelectAll: (selected: boolean, selectedRows: Object[], changeRows: Object[]) => {\r\n    console.log(selected, selectedRows, changeRows);\r\n  },\r\n}\r\n","import React, { FormEvent } from 'react';\r\nimport { Table } from \"antd\";\r\nimport { observer, inject } from 'mobx-react';\r\nimport OrganizeStore from '../../../../store/organize';\r\nimport columns from \"./columns\";\r\nimport rowSelection from \"./rowSelection\";\r\nimport { DragDropContext, DragSource, DropTarget } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport \"./index.less\"\r\n\r\ninterface DepartmentMemberProps {\r\n  organizeStore?: OrganizeStore\r\n}\r\n\r\n@inject(\"organizeStore\")\r\n@observer\r\nclass DepartmentMember extends React.Component<DepartmentMemberProps, {}> {\r\n  constructor(props: DepartmentMemberProps) {\r\n    super(props);\r\n  }\r\n  componentWillMount() {\r\n    // 获取\r\n  }\r\n  componentDidMount() {\r\n    const { departmentMemberList } = this.props.organizeStore as OrganizeStore;\r\n  }\r\n  render() {\r\n    const { departmentMemberList } = this.props.organizeStore as OrganizeStore;\r\n    return (\r\n      <div className=\"mf-department-member\">\r\n        <div className=\"mf-department-member__title\">\r\n          <a className=\"mf-department-member__title__name\">\r\n            部门人员<span>20</span>\r\n          </a>\r\n          <a className=\"mf-department-member__add\">\r\n            <i className=\"iconfont iconjia\" />\r\n            <span>添加成员</span>\r\n          </a>\r\n          <a className=\"mf-department-member__sort\">\r\n            <i className=\"iconfont iconpaixu\" />\r\n            <span>成员排序</span>\r\n          </a>\r\n          <a className=\"mf-department-member__add\">\r\n            <i className=\"iconfont iconjia\" />\r\n            <span>调整部门</span>\r\n          </a>\r\n          <a className=\"mf-department-member__sort\">\r\n            <i className=\"iconfont iconpaixu\" />\r\n            <span>批量删除</span>\r\n          </a>\r\n        </div>\r\n        <Table columns={columns} rowSelection={rowSelection} dataSource={departmentMemberList.slice()} rowKey=\"phone\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DepartmentMember;\r\n","import React from \"react\";\r\nimport { Drawer, Form, Input, Button, Modal } from \"antd\";\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport MfTree from '../../../../components/MfTree/index';\r\nimport \"./index.less\";\r\n\r\ninterface EditDepartmentProps extends RouteComponentProps {\r\n\r\n}\r\ninterface EditDepartmentState {\r\n  visible?: boolean,\r\n  orgTreeVisible?: boolean,\r\n}\r\nexport const formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 20 }\r\n  }\r\n}\r\n\r\nexport const tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: { span: 24, offet: 0 },\r\n    sm: { span: 20, offset: 4 }\r\n  }\r\n}\r\nclass EditDepartment extends React.Component<EditDepartmentProps, EditDepartmentState> {\r\n  constructor(props: EditDepartmentProps) {\r\n    super(props);\r\n    this.state = {\r\n      visible: true,\r\n      orgTreeVisible: false,\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    console.log(this.props.match);\r\n  }\r\n  onCloseDrawer = () => {\r\n    const { history, match } = this.props;\r\n    const url: string = match.url;\r\n    console.log(match);\r\n    this.setState({\r\n      visible: false,\r\n    }, () => {\r\n      // if (match.url.indexOf('add') > -1) {\r\n      //   this.props.history.push(url.split('/add')[0]);\r\n      // } else {\r\n      //   this.props.history.push(url.split('/edit')[0]);\r\n      // }\r\n      history.go(-1);\r\n    });\r\n  }\r\n  showOrgTree = () => {\r\n    this.setState({\r\n      orgTreeVisible: true,\r\n    });\r\n  }\r\n  cancelTreeVisibleCb = () => {\r\n    this.setState({\r\n      orgTreeVisible: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Drawer\r\n        title=\"\"\r\n        visible={this.state.visible}\r\n        onClose={this.onCloseDrawer}\r\n        width={572}\r\n      >\r\n        <div className=\"edit-organize\">\r\n          <h3 className=\"edit-organize__title\">\r\n            部门信息\r\n        </h3>\r\n          <Form labelAlign=\"left\" className=\"edit-organize__form\">\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label=\"部门名称\"\r\n            >\r\n              <Input type=\"text\" placeholder=\"请选择企业类型\" size=\"large\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label=\"上级部门\"\r\n            >\r\n              <div className=\"edit-organize__form__upperorg\" onClick={this.showOrgTree}>\r\n                <div className=\"edit-organize__upperorg__left\">\r\n                  <span>客户端开发组</span>\r\n                </div>\r\n                <div className=\"edit-organize__upperorg__right\">\r\n                  <i className=\"iconfont iconicon-test\" />\r\n                </div>\r\n              </div>\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <div className=\"edit-organize__form__operate\">\r\n                <Button type=\"primary\" size=\"large\" className=\"btn--width\">保存</Button>\r\n                <Button className=\"btn--width\" size=\"large\" onClick={this.onCloseDrawer}>取消</Button>\r\n              </div>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        <Modal\r\n          visible={this.state.orgTreeVisible}\r\n          onCancel={this.cancelTreeVisibleCb}\r\n          footer={null}\r\n          bodyStyle={{\r\n            \"padding\": \"40px\"\r\n          }}\r\n          title=\"选择部门\"\r\n          className=\"eidt-organize-modal__mftree\"\r\n        >\r\n          <div className=\"eidt-organize-modal__mftree__container\">\r\n            <MfTree minHeight={400} />\r\n          </div>\r\n          <div className=\"eidt-organize-modal__mftree__status\">\r\n            <div className=\"eidt-organize-modal__status\">\r\n              <span>已选：</span>\r\n              <span>生态业务部</span>\r\n            </div>\r\n            <Button type=\"primary\" size=\"large\" className=\"btn--width\">确定</Button>\r\n          </div>\r\n        </Modal>\r\n      </Drawer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditDepartment;\r\n","import React from 'react';\r\nimport { Drawer, Input, Icon } from \"antd\";\r\nimport MfMenu from '../../components/MfMenu/index';\r\nimport MfOrgdrawer from '../../components/MfOrgdrawer/index';\r\nimport DepartmentInfo from \"./component/DepartmentInfo\";\r\nimport MfTree from '../../components/MfTree/index';\r\nimport { observer, inject } from 'mobx-react';\r\nimport OrganizeStore from '../../store/organize';\r\nimport ChildDepartment from \"./component/ChildDepartment\";\r\nimport DepartmentHeader from './component/DepartmentHeader/index';\r\nimport DepartmentMember from './component/DepartmentMember/index';\r\nimport EditOrganizePage from './component/EditDepartment/index';\r\nimport { BrowserRouter as Router, Route, Switch, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport \"./index.less\";\r\n\r\n// const EditOrganizePage = React.lazy(() => import('./component/EditDepartment/index'));\r\n\r\ninterface OrganizeProps extends RouteComponentProps {\r\n  organizeStore: OrganizeStore,\r\n}\r\ninterface OrganizeState {\r\n  orgdrawerVisible: boolean,\r\n  treeData: Object\r\n}\r\n\r\n@inject(\"organizeStore\")\r\n@observer\r\nclass Organize extends React.Component<OrganizeProps, OrganizeState> {\r\n  constructor(props: OrganizeProps) {\r\n    super(props);\r\n    this.state = {\r\n      orgdrawerVisible: true,\r\n      treeData: {\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { organizeList } = this.props.organizeStore;\r\n    console.log(`${this.props.match.path}/edit`);\r\n  }\r\n  mforgdrawerCollapse = () => {\r\n    this.setState({\r\n      orgdrawerVisible: false,\r\n    })\r\n  }\r\n  mforgdrawerExpand = () => {\r\n    this.setState({\r\n      orgdrawerVisible: true,\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"mf-orgpage\">\r\n        <MfOrgdrawer\r\n          visible={this.state.orgdrawerVisible}\r\n          onCollapse={this.mforgdrawerCollapse}\r\n          onExpand={this.mforgdrawerExpand}\r\n        >\r\n          <MfTree />\r\n        </MfOrgdrawer>\r\n        <div className=\"mf-orgpage__content\">\r\n          <DepartmentHeader />\r\n          <ChildDepartment />\r\n          <DepartmentMember />\r\n          <Switch>\r\n            <Route path={`${this.props.match.path}/:id/edit`} component={EditOrganizePage} />\r\n            <Route path={`${this.props.match.path}/:id/add`} component={EditOrganizePage} />\r\n            <Route path={`${this.props.match.path}/add`} component={EditOrganizePage} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Organize;\r\n"],"sourceRoot":""}